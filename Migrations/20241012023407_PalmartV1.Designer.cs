// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Palmart.Data;

#nullable disable

namespace Palmart.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241012023407_PalmartV1")]
    partial class PalmartV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Palmart.Models.Brand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool?>("Boycott")
                        .HasColumnType("bit");

                    b.Property<int>("BrandStatus")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("EmpID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("NotAppropiate")
                        .HasColumnType("bit");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmpID");

                    b.HasIndex("UserID");

                    b.ToTable("Brand", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Pakistan",
                            Description = "Traditional and modern fashion",
                            EmpID = 0,
                            Name = "Khaadi",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 2,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Pakistan",
                            Description = "Clothing and textiles",
                            EmpID = 0,
                            Name = "Bonanza Satrangi",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 3,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Pakistan",
                            Description = "Eastern wear and fashion",
                            EmpID = 0,
                            Name = "J.",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 4,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "Pakistan",
                            Description = "Halal cosmetics and skincare",
                            EmpID = 0,
                            Name = "Wardah",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 5,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "Oman",
                            Description = "Luxury perfumes",
                            EmpID = 0,
                            Name = "Amouage",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 6,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Pakistan",
                            Description = "Online clothing and accessories",
                            EmpID = 0,
                            Name = "Daraz",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 7,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Egypt",
                            Description = "Fashion accessories and clothing",
                            EmpID = 0,
                            Name = "Chanelle",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 8,
                            Boycott = false,
                            BrandStatus = 0,
                            Category = 1,
                            CountryOfOrigin = "South Korea",
                            Description = "Lifestyle and beauty products",
                            EmpID = 0,
                            Name = "Mumuso",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 9,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "South Korea",
                            Description = "Korean skincare products",
                            EmpID = 0,
                            Name = "Skinfood",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 10,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "South Korea",
                            Description = "Luxury Korean skincare",
                            EmpID = 0,
                            Name = "Sulwhasoo",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 11,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "South Korea",
                            Description = "Korean cosmetics and beauty",
                            EmpID = 0,
                            Name = "Tonymoly",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 12,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Japan",
                            Description = "Japanese skincare and makeup",
                            EmpID = 0,
                            Name = "Kose",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 13,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Japan",
                            Description = "Japanese skincare",
                            EmpID = 0,
                            Name = "Hada Labo",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 14,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Jordan",
                            Description = "Fashion and lifestyle brand",
                            EmpID = 0,
                            Name = "Yasmeen",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 15,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Malaysia",
                            Description = "Modest fashion",
                            EmpID = 0,
                            Name = "Naelofar",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 16,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Malaysia",
                            Description = "Halal beauty and skincare products",
                            EmpID = 0,
                            Name = "Safi",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 17,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "China",
                            Description = "Affordable beauty and household items",
                            EmpID = 0,
                            Name = "Miniso",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 18,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "South Korea",
                            Description = "Sportswear and fashion",
                            EmpID = 0,
                            Name = "FILA",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 19,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Japan",
                            Description = "Sports equipment and fashion",
                            EmpID = 0,
                            Name = "Mizuno",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 20,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "China",
                            Description = "Mobile electronics and accessories",
                            EmpID = 0,
                            Name = "Infinix",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 21,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "China",
                            Description = "Electronics and gadgets",
                            EmpID = 0,
                            Name = "Xiomi",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 22,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "South Korea",
                            Description = "Korean luxury skincare",
                            EmpID = 0,
                            Name = "Laneige",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 23,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "South Korea",
                            Description = "Floral-based skincare products",
                            EmpID = 0,
                            Name = "Mamonde",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 24,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "UAE",
                            Description = "Luxury makeup brand",
                            EmpID = 0,
                            Name = "Huda Beauty",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 25,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "UAE",
                            Description = "Perfumes and cosmetics",
                            EmpID = 0,
                            Name = "Ajmal",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 26,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "UAE",
                            Description = "Luxury perfumes",
                            EmpID = 0,
                            Name = "Al Haramain",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 27,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "UAE",
                            Description = "Traditional perfumes",
                            EmpID = 0,
                            Name = "Ahmed Perfumes",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 28,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Japan",
                            Description = "Minimalist fashion and household products",
                            EmpID = 0,
                            Name = "Muji",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 29,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Egypt",
                            Description = "Modest clothing and fashion",
                            EmpID = 0,
                            Name = "Mina",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 30,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Egypt",
                            Description = "Egyptian organic skincare",
                            EmpID = 0,
                            Name = "Nefertari",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 31,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "UAE",
                            Description = "Clothing brand",
                            EmpID = 0,
                            Name = "Emirates Apparel",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 32,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "UAE",
                            Description = "Affordable fashion",
                            EmpID = 0,
                            Name = "Splash",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 33,
                            Boycott = false,
                            BrandStatus = 0,
                            Category = 0,
                            CountryOfOrigin = "Canada",
                            Description = "Footwear and accessories",
                            EmpID = 0,
                            Name = "Aldo",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 34,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "South Korea",
                            Description = "Luxury hair care",
                            EmpID = 0,
                            Name = "Balmain Hair Couture",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 35,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Brazil",
                            Description = "Brazilian skincare and cosmetics",
                            EmpID = 0,
                            Name = "Natura",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 36,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Brazil",
                            Description = "Brazilian cosmetics",
                            EmpID = 0,
                            Name = "Granado",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 37,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Brazil",
                            Description = "Brazilian perfumes and cosmetics",
                            EmpID = 0,
                            Name = "O Boticário",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 38,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "Turkey",
                            Description = "Halal cosmetics",
                            EmpID = 0,
                            Name = "Farmasi",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 39,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "Turkey",
                            Description = "Turkish makeup and skincare",
                            EmpID = 0,
                            Name = "Flormar",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 40,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Turkey",
                            Description = "Fashion and textiles",
                            EmpID = 0,
                            Name = "Koton",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 41,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Turkey",
                            Description = "Fashion and lifestyle",
                            EmpID = 0,
                            Name = "LC Waikiki",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 42,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Turkey",
                            Description = "Luxury fashion",
                            EmpID = 0,
                            Name = "Vakko",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 43,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Turkey",
                            Description = "Cosmetics and personal care",
                            EmpID = 0,
                            Name = "L'Oréal Türkiye",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 44,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Malaysia",
                            Description = "Halal skincare",
                            EmpID = 0,
                            Name = "Muslim Pro",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 45,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Japan",
                            Description = "Luxury fashion and cosmetics",
                            EmpID = 0,
                            Name = "Isetan",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 46,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "Japan",
                            Description = "Luxury Japanese cosmetics",
                            EmpID = 0,
                            Name = "Shu Uemura",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 47,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "South Korea",
                            Description = "Korean skincare",
                            EmpID = 0,
                            Name = "Dr. Jart+",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 48,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Japan",
                            Description = "Luxury Japanese skincare",
                            EmpID = 0,
                            Name = "Shiseido",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 49,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "South Korea",
                            Description = "Korean makeup",
                            EmpID = 0,
                            Name = "Clio",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 50,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "South Korea",
                            Description = "Korean beauty",
                            EmpID = 0,
                            Name = "Banila Co",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 51,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Pakistan",
                            Description = "Traditional clothing",
                            EmpID = 0,
                            Name = "Junaid Jamshed",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 52,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Pakistan",
                            Description = "Textiles and fashion clothing",
                            EmpID = 0,
                            Name = "Gul Ahmed",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 53,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "Sweden",
                            Description = "Beauty and skincare products",
                            EmpID = 0,
                            Name = "Oriflame",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 54,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "South Korea",
                            Description = "Korean skincare products",
                            EmpID = 0,
                            Name = "Nature Republic",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 55,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "South Korea",
                            Description = "Affordable Korean cosmetics",
                            EmpID = 0,
                            Name = "Missha",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 56,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "South Korea",
                            Description = "Natural Korean beauty products",
                            EmpID = 0,
                            Name = "Innisfree",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 57,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 1,
                            CountryOfOrigin = "South Korea",
                            Description = "Korean makeup and skincare",
                            EmpID = 0,
                            Name = "Etude House",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 58,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "South Korea",
                            Description = "Korean skincare solutions",
                            EmpID = 0,
                            Name = "COSRX",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 59,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Japan",
                            Description = "Minimalist fashion and household products",
                            EmpID = 0,
                            Name = "Muji",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 60,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 0,
                            CountryOfOrigin = "Egypt",
                            Description = "Modest clothing and fashion",
                            EmpID = 0,
                            Name = "Mina",
                            NotAppropiate = false,
                            UserID = 0
                        },
                        new
                        {
                            ID = 61,
                            Boycott = false,
                            BrandStatus = 1,
                            Category = 2,
                            CountryOfOrigin = "Egypt",
                            Description = "Egyptian organic skincare",
                            EmpID = 0,
                            Name = "Nefertari",
                            NotAppropiate = false,
                            UserID = 0
                        });
                });

            modelBuilder.Entity("Palmart.Models.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.Discount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.DiscountProduct", b =>
                {
                    b.Property<int>("DiscountID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("DiscountID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("DiscountProduct", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeRole")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("ID");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.EmployeeContact", b =>
                {
                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<int>("EmpID")
                        .HasColumnType("int");

                    b.HasKey("ContactID", "EmpID");

                    b.HasIndex("EmpID");

                    b.ToTable("EmployeeContact");
                });

            modelBuilder.Entity("Palmart.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("DeliveryFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EmpID")
                        .HasColumnType("int");

                    b.Property<string>("OrderAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmpID");

                    b.HasIndex("UserID");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.OrderProduct", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("OrderID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderProduct", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AdditionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.ToTable("Product", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Palmart.Models.Report", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportReason")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.Review", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Al-Rawda Street, Off the Nile Courniche, Beni Suef",
                            Email = "Yara.Emad4869@gmail.com",
                            FName = "Yara",
                            Gender = 1,
                            LName = "Emad Eldien",
                            Password = "YaraEmad4869",
                            PhoneNumber = "+201127769084",
                            RegistrationDate = new DateTime(2024, 10, 12, 5, 34, 6, 475, DateTimeKind.Local).AddTicks(8259),
                            UserType = 0,
                            Username = "Yara_Emad4869"
                        });
                });

            modelBuilder.Entity("Palmart.Models.Wishlist", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<DateTime>("AdditionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("Wishlist", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.ClothesProduct", b =>
                {
                    b.HasBaseType("Palmart.Models.Product");

                    b.Property<int>("AgeGroup")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Season")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable("ClothesProduct", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.ClothesColorSize", b =>
                {
                    b.HasBaseType("Palmart.Models.ClothesProduct");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("ClothesColorSize", (string)null);
                });

            modelBuilder.Entity("Palmart.Models.Brand", b =>
                {
                    b.HasOne("Palmart.Models.Employee", "employee")
                        .WithMany("brands")
                        .HasForeignKey("EmpID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Palmart.Models.User", "user")
                        .WithMany("brands")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Palmart.Models.Contact", b =>
                {
                    b.HasOne("Palmart.Models.User", null)
                        .WithMany("contacts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Palmart.Models.DiscountProduct", b =>
                {
                    b.HasOne("Palmart.Models.Discount", "discount")
                        .WithMany("discountProducts")
                        .HasForeignKey("DiscountID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Palmart.Models.Product", "product")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("discount");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Palmart.Models.EmployeeContact", b =>
                {
                    b.HasOne("Palmart.Models.Contact", "contact")
                        .WithMany("employeeContacts")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Palmart.Models.Employee", "employee")
                        .WithMany("employeeContacts")
                        .HasForeignKey("EmpID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("contact");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("Palmart.Models.Order", b =>
                {
                    b.HasOne("Palmart.Models.Employee", "employee")
                        .WithMany("orders")
                        .HasForeignKey("EmpID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Palmart.Models.User", "user")
                        .WithMany("orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Palmart.Models.OrderProduct", b =>
                {
                    b.HasOne("Palmart.Models.Order", "order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Palmart.Models.Product", "product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Palmart.Models.Payment", b =>
                {
                    b.HasOne("Palmart.Models.User", "user")
                        .WithMany("payment")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Palmart.Models.Product", b =>
                {
                    b.HasOne("Palmart.Models.Brand", "brand")
                        .WithMany("products")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("brand");
                });

            modelBuilder.Entity("Palmart.Models.Report", b =>
                {
                    b.HasOne("Palmart.Models.Product", "product")
                        .WithMany("reports")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Palmart.Models.User", "user")
                        .WithMany("reports")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Palmart.Models.Review", b =>
                {
                    b.HasOne("Palmart.Models.Product", "product")
                        .WithMany("reviews")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Palmart.Models.User", "user")
                        .WithMany("reviews")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Palmart.Models.Wishlist", b =>
                {
                    b.HasOne("Palmart.Models.Product", "product")
                        .WithMany("wishlists")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Palmart.Models.User", "user")
                        .WithMany("wishlist")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Palmart.Models.ClothesProduct", b =>
                {
                    b.HasOne("Palmart.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("Palmart.Models.ClothesProduct", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Palmart.Models.ClothesColorSize", b =>
                {
                    b.HasOne("Palmart.Models.ClothesProduct", null)
                        .WithOne()
                        .HasForeignKey("Palmart.Models.ClothesColorSize", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Palmart.Models.Brand", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Palmart.Models.Contact", b =>
                {
                    b.Navigation("employeeContacts");
                });

            modelBuilder.Entity("Palmart.Models.Discount", b =>
                {
                    b.Navigation("discountProducts");
                });

            modelBuilder.Entity("Palmart.Models.Employee", b =>
                {
                    b.Navigation("brands");

                    b.Navigation("employeeContacts");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("Palmart.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Palmart.Models.Product", b =>
                {
                    b.Navigation("DiscountProducts");

                    b.Navigation("OrderProducts");

                    b.Navigation("reports");

                    b.Navigation("reviews");

                    b.Navigation("wishlists");
                });

            modelBuilder.Entity("Palmart.Models.User", b =>
                {
                    b.Navigation("brands");

                    b.Navigation("contacts");

                    b.Navigation("orders");

                    b.Navigation("payment");

                    b.Navigation("reports");

                    b.Navigation("reviews");

                    b.Navigation("wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
